// GENERATED CODE - DO NOT MODIFY BY HAND
// **************************************************************************
// auto generated by https://github.com/fluttercandies/ff_annotation_route
// **************************************************************************

import 'package:flutter/widgets.dart';

import 'demo/complex/nested_scroll_view_demo.dart';
import 'demo/complex/waterfall_flow_demo.dart';
import 'demo/main_page.dart';
import 'demo/simple/custom_indicator_demo.dart';
import 'demo/simple/grid_view_demo.dart';
import 'demo/simple/list_view_demo.dart';
import 'demo/simple/multiple_sliver_demo.dart';
import 'demo/simple/sliver_grid_demo.dart';
import 'demo/simple/sliver_list_demo.dart';

RouteResult getRouteResult({String name, Map<String, dynamic> arguments}) {
  switch (name) {
    case "fluttercandies://CustomIndicatorDemo":
      return RouteResult(
        widget: CustomIndicatorDemo(),
        routeName: "CustomIndicator",
        description:
            'Show how to build loading more list with custom indicator quickly',
        exts: <String, dynamic>{'group': 'Simple', 'order': 2},
      );
    case "fluttercandies://GridViewDemo":
      return RouteResult(
        widget: GridViewDemo(),
        routeName: 'GridView',
        description: 'Show how to build loading more GridView quickly',
        exts: <String, dynamic>{'group': 'Simple', 'order': 1},
      );
    case "fluttercandies://ListViewDemo":
      return RouteResult(
        widget: ListViewDemo(),
        routeName: 'ListView',
        description: 'Show how to build loading more ListView quickly',
        exts: <String, dynamic>{'group': 'Simple', 'order': 0},
      );
    case "fluttercandies://MultipleSliverDemo":
      return RouteResult(
        widget: MultipleSliverDemo(),
        routeName: "MultipleSliver",
        description:
            'Show how to build loading more multiple sliver list quickly',
        exts: <String, dynamic>{'group': 'Simple', 'order': 5},
      );
    case "fluttercandies://NestedScrollViewDemo":
      return RouteResult(
        widget: NestedScrollViewDemo(),
        routeName: "NestedScrollView",
        description:
            'Show how to build loading more list in NestedScrollView quickly',
        exts: <String, dynamic>{'group': 'Complex', 'order': 1},
      );
    case "fluttercandies://SliverGridDemo":
      return RouteResult(
        widget: SliverGridDemo(),
        routeName: 'SliverGrid',
        description: 'Show how to build loading more SilverGird quickly',
        exts: <String, dynamic>{'group': 'Simple', 'order': 4},
      );
    case "fluttercandies://SliverListDemo":
      return RouteResult(
        widget: SliverListDemo(),
        routeName: 'SliverList',
        description: 'Show how to build loading more SliverList quickly',
        exts: <String, dynamic>{'group': 'Simple', 'order': 3},
      );
    case "fluttercandies://WaterfallFlowDemo":
      return RouteResult(
        widget: WaterfallFlowDemo(),
        routeName: 'WaterfallFlow',
        description: 'Show how to build loading more WaterfallFlow quickly',
        exts: <String, dynamic>{'group': 'Complex', 'order': 0},
      );
    case 'fluttercandies://demogrouppage':
      return RouteResult(
        name: name,
        widget: DemoGroupPage(
          keyValue: arguments['keyValue'],
        ),
        routeName: 'DemoGroupPage',
      );
    case 'fluttercandies://mainpage':
      return RouteResult(
        name: name,
        widget: MainPage(),
        routeName: 'MainPage',
      );
    default:
      return RouteResult();
  }
}

class RouteResult {
  /// The Widget return base on route
  final Widget widget;

  /// Whether show this route with status bar.
  final bool showStatusBar;

  /// The route name to track page
  final String routeName;

  /// The type of page route
  final PageRouteType pageRouteType;

  /// The description of route
  final String description;

  const RouteResult(
      {this.widget,
      this.showStatusBar = true,
      this.routeName = '',
      this.pageRouteType,
      this.description = ''});
}

enum PageRouteType { material, cupertino, transparent }

List<String> routeNames = [
  "fluttercandies://CustomIndicatorDemo",
  "fluttercandies://WaterfallFlowDemo",
  "fluttercandies://GridViewDemo",
  "fluttercandies://ListViewDemo",
  "fluttercandies://mainpage",
  "fluttercandies://MultipleSliverDemo",
  "fluttercandies://NestedScrollViewDemo",
  "fluttercandies://SliverGridDemo",
  "fluttercandies://SliverListDemo",
];
